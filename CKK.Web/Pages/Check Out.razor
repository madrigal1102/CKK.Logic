@page "/checkout"

@using System.ComponentModel.DataAnnotations

<h1>Check Out</h1>

<EditForm Model="customerInfo" OnValidSubmit="ProcessCheckout">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="firstName">First Name</label>
        <InputText id="firstName" class="form-control" @bind-Value="customerInfo.FirstName" />
        <ValidationMessage For="() => customerInfo.FirstName" />
    </div>

    <div class="form-group">
        <label for="lastName">Last Name</label>
        <InputText id="lastName" class="form-control" @bind-Value="customerInfo.LastName" />
        <ValidationMessage For="() => customerInfo.LastName" />
    </div>

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="customerInfo.Email" />
        <ValidationMessage For="() => customerInfo.Email" />
    </div>

    <div class="form-group">
        <label for="cardNumber">Card Number</label>
        <InputText id="cardNumber" class="form-control" @bind-Value="customerInfo.CardNumber" type="password" />
        <ValidationMessage For="() => customerInfo.CardNumber" />
    </div>

    <div class="form-group">
        <label for="expirationDate">Expiration Date</label>
        <InputText id="expirationDate" class="form-control" @bind-Value="customerInfo.ExpirationDate" placeholder="MM/YY" />
        <ValidationMessage For="() => customerInfo.ExpirationDate" />
    </div>

    <div class="form-group">
        <label for="cvv">CVV</label>
        <InputText id="cvv" class="form-control" @bind-Value="customerInfo.CVV" type="password" />
        <ValidationMessage For="() => customerInfo.CVV" />
    </div>

    <button type="submit" class="btn btn-primary">Complete Purchase</button>
</EditForm>

@if (isProcessing)
{
    <p>Processing your order...</p>
}

@if (orderProcessed)
{
    <p style="margin-top: 20px; font-size: 1.5rem; color: green;">Purchase Successful! Thank you for your purchase!</p>
}

@code {
    private CustomerInfo customerInfo = new CustomerInfo();
    private bool isProcessing = false;
    private bool orderProcessed = false;

    private async Task ProcessCheckout()
    {
        isProcessing = true;

        // Simulate processing delay
        await Task.Delay(2000);

        isProcessing = false;
        orderProcessed = true;
    }

    public class CustomerInfo
    {
        [Required(ErrorMessage = "First name is required.")]
        public string FirstName { get; set; }

        [Required(ErrorMessage = "Last name is required.")]
        public string LastName { get; set; }

        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email address.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Card number is required.")]
        [CreditCard(ErrorMessage = "Invalid card number.")]
        public string CardNumber { get; set; }

        [Required(ErrorMessage = "Expiration date is required.")]
        public string ExpirationDate { get; set; }

        [Required(ErrorMessage = "CVV is required.")]
        [StringLength(3, ErrorMessage = "CVV must be 3 digits.", MinimumLength = 3)]
        public string CVV { get; set; }
    }
}

